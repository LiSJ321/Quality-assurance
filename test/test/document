Test Document for evalRPN Function

Introduction
The evalRPN function is a reverse polish notation calculator that takes in a list of strings representing numbers and arithmetic operators +, -, *, / and returns an integer value as the result of the calculation.

This document presents a suite of unit tests designed to test the functionality and robustness of the evalRPN function.

Test Cases

test_valid_operators: Tests that valid operators are allowed in the expression.
Input: ["1", "2", "+", "3", "-", "4", "*", "5", "/"]
Expected output: -0
test_valid_operand: Tests that valid operands are allowed in the expression.
Input: ["2", "3", "4a", "+"]
Expected output: Expecting an Exception to be raised.
test_division_truncates_toward_zero: Tests that division between two integers always truncates toward zero.
Input: ["7", "-3", "/"]
Expected output: -2
test_no_division_by_zero: Tests that division by zero is not allowed.
Input: ["2", "0", "/"]
Expected output: Expecting an Exception to be raised.
test_valid_expression: Tests that the input represents a valid arithmetic expression in a reverse polish notation.
Input: ["10","6","9","3","+","-11","","/","","17","+","5","+"]
Expected output: 22
test_result_within_32_bit_integer_range: Tests that the answer and all the intermediate calculations can be represented in a 32-bit integer.
Input: ["2147483647", "1", "+"]
Expected output: 2147483648
Conclusion
These six tests are designed to ensure that the evalRPN function operates correctly and robustly under various scenarios. By passing all unit tests, we can have confidence in the quality of the evalRPN function.